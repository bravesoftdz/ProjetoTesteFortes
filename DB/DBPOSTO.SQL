/******************************************************************************/
/***         Generated by IBExpert 2020.4.21.2 24/10/2021 21:02:54          ***/
/******************************************************************************/

SET SQL DIALECT 3;

SET NAMES WIN1252;

CREATE DATABASE 'localhost/3050:C:\Fortes\Posto\BIN\DB\POSTOABC.FDB'
USER 'SYSDBA' PASSWORD 'masterkey'
PAGE_SIZE 16384
DEFAULT CHARACTER SET WIN1252 COLLATION WIN1252;



/******************************************************************************/
/***                               Generators                               ***/
/******************************************************************************/

CREATE GENERATOR GEN_ABASTECIMENTOS_ID;
SET GENERATOR GEN_ABASTECIMENTOS_ID TO 0;

CREATE GENERATOR GEN_BOMBAS_ID;
SET GENERATOR GEN_BOMBAS_ID TO 0;

CREATE GENERATOR GEN_POSTOS_ID;
SET GENERATOR GEN_POSTOS_ID TO 0;

CREATE GENERATOR GEN_TANQUES_ID;
SET GENERATOR GEN_TANQUES_ID TO 0;



/******************************************************************************/
/***                           Stored procedures                            ***/
/******************************************************************************/



SET TERM ^ ;

CREATE PROCEDURE SP_GEN_ABASTECIMENTOS_ID
RETURNS (
    ID INTEGER)
AS
BEGIN
  SUSPEND;
END^





CREATE PROCEDURE SP_GEN_BOMBAS_ID
RETURNS (
    ID INTEGER)
AS
BEGIN
  SUSPEND;
END^





CREATE PROCEDURE SP_GEN_POSTOS_ID
RETURNS (
    ID INTEGER)
AS
BEGIN
  SUSPEND;
END^





CREATE PROCEDURE SP_GEN_TANQUES_ID
RETURNS (
    ID INTEGER)
AS
BEGIN
  SUSPEND;
END^






SET TERM ; ^



/******************************************************************************/
/***                                 Tables                                 ***/
/******************************************************************************/



CREATE TABLE ABASTECIMENTOS (
    ID                INTEGER NOT NULL,
    ID_POSTO          INTEGER NOT NULL,
    ID_TANQUE         INTEGER,
    ID_BOMBA          INTEGER NOT NULL,
    TIPO_COMBUSTIVEL  VARCHAR(1) NOT NULL,
    DATA              DATE NOT NULL,
    QTD_LITROS        NUMERIC(15,2) NOT NULL,
    VALOR_BRUTO       NUMERIC(15,2) NOT NULL,
    VALOR_IMPOSTO     NUMERIC(15,2) NOT NULL,
    VALOR_TOTAL       NUMERIC(15,2) NOT NULL
);

CREATE TABLE BOMBAS (
    ID         INTEGER NOT NULL,
    ID_POSTO   INTEGER NOT NULL,
    DESCRICAO  VARCHAR(60) NOT NULL
);

CREATE TABLE POSTOS (
    ID              INTEGER NOT NULL,
    NOME            VARCHAR(60) NOT NULL,
    IMPOSTO         NUMERIC(15,2) NOT NULL,
    VALOR_GASOLINA  NUMERIC(15,2) NOT NULL,
    VALOR_DIESEL    DECIMAL(15,2) NOT NULL
);

CREATE TABLE TANQUES (
    ID                INTEGER NOT NULL,
    ID_POSTO          INTEGER NOT NULL,
    DESCRICAO         VARCHAR(60) NOT NULL,
    CAPACIDADE        NUMERIC(15,2) NOT NULL,
    DISPONIVEL        NUMERIC(15,2) NOT NULL,
    TIPO_COMBUSTIVEL  CHAR(1) NOT NULL
);

INSERT INTO POSTOS (ID, NOME, IMPOSTO, VALOR_GASOLINA, VALOR_DIESEL) VALUES (1, 'POSTO ABC', 13, 5.68, 3.25);

COMMIT WORK;

INSERT INTO BOMBAS (ID, ID_POSTO, DESCRICAO) VALUES (1, 1, 'BOMBA 1');
INSERT INTO BOMBAS (ID, ID_POSTO, DESCRICAO) VALUES (2, 1, 'BOMBA 2');

COMMIT WORK;

INSERT INTO TANQUES (ID, ID_POSTO, DESCRICAO, CAPACIDADE, DISPONIVEL, TIPO_COMBUSTIVEL) VALUES (1, 1, 'TANQUE DIESEL', 10000, 4836, 'D');
INSERT INTO TANQUES (ID, ID_POSTO, DESCRICAO, CAPACIDADE, DISPONIVEL, TIPO_COMBUSTIVEL) VALUES (2, 1, 'TANQUE GASOLINA', 10000, 7255, 'G');

COMMIT WORK;



/******************************************************************************/
/***                              Primary keys                              ***/
/******************************************************************************/

ALTER TABLE ABASTECIMENTOS ADD CONSTRAINT PK_ABASTECIMENTOS PRIMARY KEY (ID);
ALTER TABLE BOMBAS ADD CONSTRAINT PK_BOMBAS PRIMARY KEY (ID);
ALTER TABLE POSTOS ADD CONSTRAINT PK_POSTOS PRIMARY KEY (ID);
ALTER TABLE TANQUES ADD CONSTRAINT PK_TANQUES PRIMARY KEY (ID);


/******************************************************************************/
/***                              Foreign keys                              ***/
/******************************************************************************/

ALTER TABLE ABASTECIMENTOS ADD CONSTRAINT FK_ABASTECIMENTOS_BOMBA FOREIGN KEY (ID_BOMBA) REFERENCES BOMBAS (ID);
ALTER TABLE ABASTECIMENTOS ADD CONSTRAINT FK_ABASTECIMENTOS_POSTO FOREIGN KEY (ID_POSTO) REFERENCES POSTOS (ID);
ALTER TABLE ABASTECIMENTOS ADD CONSTRAINT FK_ABASTECIMENTOS_TANQUE FOREIGN KEY (ID_TANQUE) REFERENCES TANQUES (ID);
ALTER TABLE BOMBAS ADD CONSTRAINT FK_BOMBAS_POSTO FOREIGN KEY (ID_POSTO) REFERENCES POSTOS (ID);
ALTER TABLE TANQUES ADD CONSTRAINT FK_TANQUES_POSTO FOREIGN KEY (ID_POSTO) REFERENCES POSTOS (ID)
  USING INDEX FK_TANQUES_1;


/******************************************************************************/
/***                                Triggers                                ***/
/******************************************************************************/



SET TERM ^ ;



/******************************************************************************/
/***                          Triggers for tables                           ***/
/******************************************************************************/



/* Trigger: ABASTECIMENTOS_BI */
CREATE TRIGGER ABASTECIMENTOS_BI FOR ABASTECIMENTOS
ACTIVE BEFORE INSERT POSITION 0
as
begin
  if (new.id is null) then
    new.id = gen_id(gen_abastecimentos_id,1);
end
^

/* Trigger: BOMBAS_BI */
CREATE TRIGGER BOMBAS_BI FOR BOMBAS
ACTIVE BEFORE INSERT POSITION 0
as
begin
  if (new.id is null) then
    new.id = gen_id(gen_bombas_id,1);
end
^

/* Trigger: POSTOS_BI */
CREATE TRIGGER POSTOS_BI FOR POSTOS
ACTIVE BEFORE INSERT POSITION 0
as
begin
  if (new.id is null) then
    new.id = gen_id(gen_postos_id,1);
end
^

/* Trigger: TANQUES_BI */
CREATE TRIGGER TANQUES_BI FOR TANQUES
ACTIVE BEFORE INSERT POSITION 0
as
begin
  if (new.id is null) then
    new.id = gen_id(gen_tanques_id,1);
end
^
SET TERM ; ^



/******************************************************************************/
/***                           Stored procedures                            ***/
/******************************************************************************/



SET TERM ^ ;

ALTER PROCEDURE SP_GEN_ABASTECIMENTOS_ID
RETURNS (
    ID INTEGER)
AS
begin
  id = gen_id(gen_abastecimentos_id, 1);
  suspend;
end^


ALTER PROCEDURE SP_GEN_BOMBAS_ID
RETURNS (
    ID INTEGER)
AS
begin
  id = gen_id(gen_bombas_id, 1);
  suspend;
end^


ALTER PROCEDURE SP_GEN_POSTOS_ID
RETURNS (
    ID INTEGER)
AS
begin
  id = gen_id(gen_postos_id, 1);
  suspend;
end^


ALTER PROCEDURE SP_GEN_TANQUES_ID
RETURNS (
    ID INTEGER)
AS
begin
  id = gen_id(gen_tanques_id, 1);
  suspend;
end^



SET TERM ; ^



/******************************************************************************/
/***                          Fields descriptions                           ***/
/******************************************************************************/

DESCRIBE FIELD ID TABLE ABASTECIMENTOS
'Sequencial';

DESCRIBE FIELD ID_POSTO TABLE ABASTECIMENTOS
'ID do Posto';

DESCRIBE FIELD ID_TANQUE TABLE ABASTECIMENTOS
'ID do Tanque';

DESCRIBE FIELD ID_BOMBA TABLE ABASTECIMENTOS
'ID da Bomba';

DESCRIBE FIELD TIPO_COMBUSTIVEL TABLE ABASTECIMENTOS
'Tipo de Combustível (D=Diesel, G=Gasolina)';

DESCRIBE FIELD DATA TABLE ABASTECIMENTOS
'Data do Abastecimento';

DESCRIBE FIELD QTD_LITROS TABLE ABASTECIMENTOS
'Quantidade de Litros';

DESCRIBE FIELD VALOR_BRUTO TABLE ABASTECIMENTOS
'Valor Bruto';

DESCRIBE FIELD VALOR_IMPOSTO TABLE ABASTECIMENTOS
'Valor com imposto';

DESCRIBE FIELD VALOR_TOTAL TABLE ABASTECIMENTOS
'Valor Total com imposto';

DESCRIBE FIELD ID TABLE BOMBAS
'Sequencial';

DESCRIBE FIELD ID_POSTO TABLE BOMBAS
'ID do Posto';

DESCRIBE FIELD DESCRICAO TABLE BOMBAS
'Descrição da Bomba';

DESCRIBE FIELD ID TABLE POSTOS
'Sequencial';

DESCRIBE FIELD NOME TABLE POSTOS
'Nome do Posto';

DESCRIBE FIELD IMPOSTO TABLE POSTOS
'Percentual de Imposto sobre vendas';

DESCRIBE FIELD VALOR_GASOLINA TABLE POSTOS
'Valor do Litro da Gasolina';

DESCRIBE FIELD VALOR_DIESEL TABLE POSTOS
'Valor do litro do Diesel';

DESCRIBE FIELD ID TABLE TANQUES
'Sequencial';

DESCRIBE FIELD ID_POSTO TABLE TANQUES
'ID do Posto';

DESCRIBE FIELD DESCRICAO TABLE TANQUES
'Descrição do Tanque';

DESCRIBE FIELD CAPACIDADE TABLE TANQUES
'Capacidade de litros de combustível';

DESCRIBE FIELD DISPONIVEL TABLE TANQUES
'Quantidade disponível de litros do tanque';

DESCRIBE FIELD TIPO_COMBUSTIVEL TABLE TANQUES
'Tipo de combustível (G=Gasolina, O=Óleo diesel)';

